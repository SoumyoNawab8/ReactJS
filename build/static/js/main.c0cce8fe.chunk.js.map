{"version":3,"sources":["config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/Header/Header.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/Favourites/Favourites.js","components/elements/NotFound/NotFound.js","components/App/App.js","store.js","reducers/favouriteReduer.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","className","style","background","image","title","text","SearchBar","state","name","options","handleChange","bind","event","newValue","this","setState","history","push","id","classes","Autocomplete","getOptionLabel","option","renderOption","inputValue","release_date","onInputChange","newInputValue","length","debounce","callback","value","onChange","renderInput","params","ref","InputProps","TextField","textField","placeholder","margin","nextProps","searchedmovies","Component","withStyles","theme","container","display","flexWrap","marginLeft","spacing","unit","marginRight","width","menu","withRouter","Header","root","AppBar","position","headStyle","Toolbar","Typography","variant","color","flex","Link","to","pathname","searchLoading","flexGrow","backgroundColor","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","movieId","movieName","src","alt","onClick","toggleFavourite","isFavourite","LoadMoreBtn","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchedMovies","searchItems","endpoint","fetch","then","result","json","results","catch","error","console","loadMoreItems","fetchItems","page","total_pages","localStorage","setItem","JSON","stringify","getFavourites","getItem","parse","backdrop_path","original_title","overview","poster_path","favouriteReducer","favourites","findIndex","x","updateFavourites","connect","dispatch","type","data","payload","Navigation","movie","useEffect","min","max","optimum","low","high","vote_average","directors","size","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","crew","filter","member","job","cast","location","runtime","Favourites","log","NotFound","App","BrowserRouter","Fragment","Switch","Route","path","component","exact","rootreducers","combineReducers","action","favs","Object","assign","activeMovieIndex","splice","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0cce8fe.chunk.js","sourcesContent":["// Configuration for TMDB\r\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\r\n\r\n// Images\r\n// An image URL looks like this example:\r\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\r\n\r\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\r\n\r\n//Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w500';\r\n\r\nexport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE\r\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n  return (\r\n    <div className=\"rmdb-heroimage\"\r\n      style={{\r\n        background:\r\n          `linear-gradient(to bottom, rgba(0,0,0,0)\r\n          39%,rgba(0,0,0,0)\r\n          41%,rgba(0,0,0,0.65)\r\n          100%),\r\n          url('${props.image}'), #1c1c1c`\r\n      }}\r\n    >\r\n      <div className=\"rmdb-heroimage-content\">\r\n        <div className=\"rmdb-heroimage-text\">\r\n        <h1>{props.title}</h1>\r\n        <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeroImage;","import React, { Component } from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './SearchBar.css'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {debounce} from 'lodash'\r\n// import parse from 'autosuggest-highlight/parse';\r\n// import match from 'autosuggest-highlight/match';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 200,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n});\r\nclass SearchBar extends Component{\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        name: '',\r\n        options:[],\r\n      };\r\n      this.handleChange=this.handleChange.bind(this)\r\n    }\r\n\r\n  handleChange(event, newValue) {\r\n    if (newValue && newValue.title) {\r\n      this.setState({ name: newValue.title }, () => { this.props.history.push(\"/\" + newValue.id); })\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, state) {\r\n    if (nextProps.searchedmovies) {\r\n      return {\r\n        options: nextProps.searchedmovies\r\n      }\r\n    }\r\n  }\r\n  render(){\r\n    const { classes } = this.props;\r\n    return(\r\n      <div>\r\n      <Autocomplete\r\n      id=\"custom-input-demo\"\r\n      options={this.state.options}\r\n      getOptionLabel={(option) => option.title}\r\n      renderOption={(option, { inputValue }) => {\r\n        return (\r\n          <div>\r\n              <span>\r\n                {option.title+\" - \"+option.release_date}\r\n              </span>\r\n          </div>\r\n        );\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        if(newInputValue.length>0){\r\n          this.setState({name:newInputValue})\r\n          debounce(() => this.props.callback(newInputValue), 2000)()\r\n        }\r\n        else{\r\n          this.setState({options:[]})\r\n        }\r\n      }}\r\n      inputValue={this.state.name}\r\n\r\n      value={this.state.name}\r\n        onChange={this.handleChange}\r\n      renderInput={(params) => (\r\n        <div ref={params.InputProps.ref}>\r\n          <TextField\r\n          {...params}\r\n        id=\"name\"\r\n        className={classes.textField}\r\n        placeholder={'Search'}\r\n        margin=\"normal\"\r\n      />\r\n        </div>\r\n      )}\r\n    />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(SearchBar));\r\n\r\n\r\n// class SearchBar extends Component {\r\n//   state = {\r\n//     value: ''\r\n//   }\r\n//\r\n//   timeout = null;\r\n//\r\n//   doSearch = (event) => {\r\n//     this.setState({ value: event.target.value })\r\n//     clearTimeout(this.timeout);\r\n//\r\n//     this.timeout = setTimeout( () => {\r\n//       this.props.callback(this.state.value);\r\n//     }, 500);\r\n//   }\r\n//\r\n//   render(){\r\n//     return (\r\n//       <div className=\"rmdb-searchbar\">\r\n//         <div className=\"rmdb-searchbar-content\">\r\n//           <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"rmdb-searchbar-input\"\r\n//             placeholder=\"Search\"\r\n//             onChange={this.doSearch}\r\n//             value={this.state.value}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n//\r\n// export default SearchBar;\r\n","import React, {\r\n  Component\r\n} from 'react';\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\nimport './Header.css';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  withStyles\r\n} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  headStyle: {\r\n    backgroundColor: '#7024dd',\r\n  },\r\n};\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const {\r\n      classes\r\n    } = this.props;\r\n    return (<div className={classes.root} >\r\n      <AppBar position=\"fixed\"\r\n        className={classes.headStyle} >\r\n        <Toolbar>\r\n          <Typography variant=\"title\"\r\n            color=\"inherit\"\r\n            className={classes.flex}>\r\n            MOVIE APP </Typography> \r\n            \r\n            <Link className=\"navLink\" to={{ pathname: `/favourites` }} title=\"Favourites\"><FavoriteOutlinedIcon /></Link>\r\n\r\n            <SearchBar callback={(value) => this.props.callback(value)} searchedmovies={this.props.searchedmovies}\r\n            searchLoading={this.props.searchLoading} />\r\n        </Toolbar> </AppBar> </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n  const renderElements = () => {\r\n    const gridElements = props.children.map( (element, i) => {\r\n      return (\r\n        <div key={i} className=\"rmdb-grid-element\">\r\n          {element}\r\n        </div>\r\n      )\r\n    })\r\n    return gridElements;\r\n  }\r\n\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n      <div className=\"rmdb-grid-content\">\r\n        {renderElements()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nFourColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieThumb.css';\r\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\r\n\r\nconst MovieThumb = (props) => {\r\n  return (\r\n    <div className=\"rmdb-moviethumb\">\r\n      {props.clickable ?\r\n        <Link to={{ pathname: `/${props.movieId}`, movieName: `${props.movieName}` }}>\r\n          <img src={props.image} alt=\"moviethumb\" />\r\n        </Link>\r\n        :\r\n        <img src={props.image} alt=\"moviethumb\" />\r\n      }\r\n      <span onClick={props.toggleFavourite} className=\"favouriteAddBtn\">{props.isFavourite ?<FavoriteBorderOutlinedIcon />:<FavoriteOutlinedIcon />}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n  return (\r\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loader\"></div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport Header from '../elements/Header/Header';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: '',\r\n    searchedMovies: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getFavourites();\r\n    if (localStorage.getItem('HomeState')) {\r\n      const state = JSON.parse(localStorage.getItem('HomeState'));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  searchItems = (searchTerm) => {\r\n    let endpoint = '';\r\n    this.setState({\r\n      searchTerm,\r\n      searchedMovies: []\r\n    })\r\n    endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.setState({\r\n          searchedMovies: [...result.results]\r\n        })\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n\r\n  }\r\n\r\n\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = '';\r\n    this.setState({ loading: true });\r\n\r\n    if (this.state.searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.setState({\r\n          movies: [...this.state.movies, ...result.results],\r\n          heroImage: this.state.heroImage || result.results[0],\r\n          loading: false,\r\n          currentPage: result.page,\r\n          totalPages: result.total_pages\r\n        }, () => {\r\n          if (this.state.searchTerm === \"\") {\r\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n          }\r\n        })\r\n      })\r\n      .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header callback={(value) => this.searchItems(value)} searchedmovies={this.state.searchedMovies} />\r\n        <div className=\"rmdb-home\">\r\n          {this.state.heroImage ?\r\n            <div>\r\n              <HeroImage\r\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                title={this.state.heroImage.original_title}\r\n                text={this.state.heroImage.overview}\r\n              />\r\n            </div> : null}\r\n          <div className=\"rmdb-home-grid\">\r\n            <FourColGrid\r\n              header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n              loading={this.state.loading}\r\n            >\r\n              {this.state.movies.map((element, i) => {\r\n                return <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                  movieId={element.id}\r\n                  movieName={element.original_title}\r\n                  isFavourite={this.props.favouriteReducer.favourites.findIndex(x=>x.id===element.id)===-1}\r\n                  toggleFavourite={()=>this.props.updateFavourites(element)}\r\n                />\r\n              })}\r\n            </FourColGrid>\r\n            {this.state.loading ? <Spinner /> : null}\r\n            {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ?\r\n              <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n              : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { favouriteReducer: state.favouriteReducer }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getFavourites: () => { dispatch({ type: 'loadFavourite' }) },\r\n    updateFavourites: (data) => { dispatch({ type: 'updateFavourite', payload: data }) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation;","import React,{useEffect} from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst MovieInfo = (props) => {\r\n  useEffect(()=>{\r\n    props.getFavourites();\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            toggleFavourite={()=>props.updateFavourites(props.movie)}\r\n             isFavourite={props.favouriteReducer.favourites && props.favouriteReducer.favourites.findIndex(x=>x.id===props.movie.id)===-1}\r\n            image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className=\"rmdb-movieinfo-text\">\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n          </div>\r\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n          {props.directors.map( (element, i) => {\r\n            return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n          })}\r\n        </div>\r\n        <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { favouriteReducer: state.favouriteReducer }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getFavourites: () => { dispatch({ type: 'loadFavourite' }) },\r\n    updateFavourites: (data) => { dispatch({ type: 'updateFavourite', payload: data }) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieInfo);","// Convert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n}\r\n\r\n// Convert a number to $ format\r\nexport const convertMoney = (money) => {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n  return (\r\n    <div className=\"rmdb-movieinfobar\">\r\n      <div className=\"rmdb-movieinfobar-content\">\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n\r\n  const POSTER_SIZE = \"w154\";\r\n\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Actor;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\r\n      const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true })\r\n      // First fetch the movie ...\r\n      const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n      // console.log\r\n      if (result.status_code) {\r\n        this.setState({ loading: false });\r\n      } else {\r\n        this.setState({ movie: result }, () => {\r\n          // ... then fetch actors in the setState callback function\r\n          const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n          fetch(endpoint)\r\n          .then(result => result.json())\r\n          .then(result => {\r\n            const directors = result.crew.filter( (member) => member.job === \"Director\");\r\n\r\n            this.setState({\r\n              actors: result.cast,\r\n              directors,\r\n              loading: false\r\n            }, () => {\r\n              localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state));\r\n            })\r\n          })\r\n        })\r\n      }\r\n    })\r\n    .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ?\r\n          <div>\r\n            <Navigation movie={this.props.location.movieName} />\r\n            <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n            <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n          </div>\r\n        : null }\r\n        {this.state.actors ?\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={'Actors'}>\r\n              {this.state.actors.map( (element, i) => {\r\n                return <Actor key={i} actor={element} />\r\n              })}\r\n            </FourColGrid >\r\n          </div>\r\n          : null }\r\n          {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n          {this.state.loading ? <Spinner /> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Movie;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport Header from '../elements/Header/Header';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport '../Home/Home.css';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\n\r\n\r\nclass Favourites extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: '',\r\n    searchedMovies: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getFavourites();\r\n  }\r\n\r\n  static getDerivedStateFromProps(props,state) {\r\n    if(props.favouriteReducer.favourites){\r\n      return {movies:props.favouriteReducer.favourites}\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(this.props.favouriteReducer.favourites)\r\n    return (\r\n      <div>\r\n        <Navigation movie=\"Favourites\" />\r\n        <div className=\"rmdb-home\">\r\n          <div className=\"rmdb-home-grid\">\r\n            <FourColGrid\r\n              header={'Favourite Movies'}\r\n              loading={this.state.loading}\r\n            >\r\n              {this.state.movies.map((element, i) => {\r\n                return <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                  movieId={element.id}\r\n                  movieName={element.original_title}\r\n                  isFavourite={this.props.favouriteReducer.favourites.findIndex(x=>x.id===element.id)===-1}\r\n                  toggleFavourite={()=>this.props.updateFavourites(element)}\r\n                />\r\n              })}\r\n            </FourColGrid>\r\n            {this.state.movies.length===0 && <div>Added Favourites will appear here</div>}\r\n\r\n            {this.state.loading ? <Spinner /> : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { favouriteReducer: state.favouriteReducer }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getFavourites: () => { dispatch({ type: 'loadFavourite' }) },\r\n    updateFavourites: (data) => { dispatch({ type: 'updateFavourite', payload: data }) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favourites);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Whoooops. This page doesn't exist</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport Favourites from '../Favourites/Favourites';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <React.Fragment>\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/favourites\" component={Favourites} exact />\r\n          <Route path=\"/:movieId\" component={Movie} exact />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </React.Fragment>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { favouriteReducer } from './reducers/favouriteReduer';\r\n\r\nconst rootreducers=combineReducers({favouriteReducer});\r\nexport const store=createStore(rootreducers,applyMiddleware(thunk));","\r\nexport const favouriteReducer=(state={},action)=>{\r\n    \r\n    switch(action.type){\r\n        case 'loadFavourite':\r\n            let favs=localStorage.getItem('favouriteMovies')?JSON.parse(localStorage.getItem('favouriteMovies')):[];\r\n            return Object.assign({},state,{favourites:favs});\r\n        case 'updateFavourite':\r\n            let movie = action.payload;\r\n            let favourites = state.favourites?state.favourites:[];\r\n            let activeMovieIndex = favourites.findIndex(x=>x.id===movie.id);\r\n            if(activeMovieIndex===-1){\r\n              favourites.push(movie);\r\n            }\r\n            else{\r\n              favourites.splice(activeMovieIndex,1);\r\n            }\r\n            localStorage.setItem('favouriteMovies',JSON.stringify(favourites));\r\n            return Object.assign({},state,{favourites:favourites});;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\nimport {store} from './store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));"],"sourceRoot":""}